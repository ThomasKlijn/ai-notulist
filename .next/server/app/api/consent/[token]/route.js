(()=>{var a={};a.id=74,a.ids=[74],a.modules={261:a=>{"use strict";a.exports=require("next/dist/shared/lib/router/utils/app-paths")},3295:a=>{"use strict";a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11997:a=>{"use strict";a.exports=require("punycode")},12412:a=>{"use strict";a.exports=require("assert")},19121:a=>{"use strict";a.exports=require("next/dist/server/app-render/action-async-storage.external.js")},27910:a=>{"use strict";a.exports=require("stream")},28354:a=>{"use strict";a.exports=require("util")},29021:a=>{"use strict";a.exports=require("fs")},29294:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:a=>{"use strict";a.exports=require("path")},34631:a=>{"use strict";a.exports=require("tls")},37830:a=>{"use strict";a.exports=require("node:stream/web")},39727:()=>{},44870:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},47990:()=>{},55511:a=>{"use strict";a.exports=require("crypto")},55591:a=>{"use strict";a.exports=require("https")},57075:a=>{"use strict";a.exports=require("node:stream")},63033:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},65316:(a,b,c)=>{"use strict";c.r(b),c.d(b,{handler:()=>D,patchFetch:()=>C,routeModule:()=>y,serverHooks:()=>B,workAsyncStorage:()=>z,workUnitAsyncStorage:()=>A});var d={};c.r(d),c.d(d,{GET:()=>w,POST:()=>x});var e=c(95736),f=c(9117),g=c(4044),h=c(39326),i=c(32324),j=c(261),k=c(54290),l=c(85328),m=c(38928),n=c(46595),o=c(3421),p=c(17679),q=c(41681),r=c(63446),s=c(86439),t=c(51356),u=c(10641),v=c(87628);async function w(a,{params:b}){try{let{token:a}=await b,c=await v.I.getAttendeeByConsentToken(a);if(!c)return u.NextResponse.json({error:"Invalid consent token"},{status:404});let d=await v.I.getMeeting(c.meetingId);if(!d)return u.NextResponse.json({error:"Meeting not found"},{status:404});return u.NextResponse.json({attendee:{name:c.name,email:c.email,consentGiven:c.consentGiven},meeting:{title:d.title,createdAt:d.createdAt,language:d.language},token:a})}catch(a){return console.error("Error fetching consent details:",a),u.NextResponse.json({error:"Internal server error"},{status:500})}}async function x(a,{params:b}){try{let{token:c}=await b,{action:d}=await a.json();if(!["give","withdraw"].includes(d))return u.NextResponse.json({error:'Invalid action. Use "give" or "withdraw"'},{status:400});let e=await v.I.updateAttendeeConsent(c,"give"===d);if(!e)return u.NextResponse.json({error:"Invalid consent token or operation failed"},{status:404});return await v.I.updateMeetingConsentStatus(e.meetingId),u.NextResponse.json({ok:!0,consentGiven:"give"===d,timestamp:new Date().toISOString()})}catch(a){return console.error("Error updating consent:",a),u.NextResponse.json({error:"Internal server error"},{status:500})}}let y=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/consent/[token]/route",pathname:"/api/consent/[token]",filename:"route",bundlePath:"app/api/consent/[token]/route"},distDir:".next",relativeProjectDir:"",resolvedPagePath:"/home/runner/workspace/app/api/consent/[token]/route.ts",nextConfigOutput:"",userland:d}),{workAsyncStorage:z,workUnitAsyncStorage:A,serverHooks:B}=y;function C(){return(0,g.patchFetch)({workAsyncStorage:z,workUnitAsyncStorage:A})}async function D(a,b,c){var d;let e="/api/consent/[token]/route";"/index"===e&&(e="/");let g=await y.prepare(a,b,{srcPage:e,multiZoneDraftMode:!1});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:w,isDraftMode:x,prerenderManifest:z,routerServerContext:A,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,resolvedPathname:D}=g,E=(0,j.normalizeAppPath)(e),F=!!(z.dynamicRoutes[E]||z.routes[D]);if(F&&!x){let a=!!z.routes[D],b=z.dynamicRoutes[E];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let G=null;!F||y.isDev||x||(G="/index"===(G=D)?"/":G);let H=!0===y.isDev||!F,I=F&&!H,J=a.method||"GET",K=(0,i.getTracer)(),L=K.getActiveScopeSpan(),M={params:v,prerenderManifest:z,renderOpts:{experimental:{cacheComponents:!!w.experimental.cacheComponents,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:H,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=w.experimental)?void 0:d.cacheLife,isRevalidate:I,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>y.onRequestError(a,b,d,A)},sharedContext:{buildId:u}},N=new k.NodeNextRequest(a),O=new k.NodeNextResponse(b),P=l.NextRequestAdapter.fromNodeNextRequest(N,(0,l.signalFromNodeResponse)(b));try{let d=async c=>y.handle(P,M).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=K.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${J} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${J} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&B&&C&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=M.renderOpts.fetchMetrics;let i=M.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=M.renderOpts.collectedTags;if(!F)return await (0,o.I)(N,O,e,M.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,d=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await y.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})},A),b}},l=await y.handleResponse({req:a,nextConfig:w,cacheKey:G,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:z,isRoutePPREnabled:!1,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,responseGenerator:k,waitUntil:c.waitUntil});if(!F)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",B?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),x&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&F||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(N,O,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};L?await g(L):await K.withPropagatedContext(a.headers,()=>K.trace(m.BaseServerSpan.handleRequest,{spanName:`${J} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":J,"http.target":a.url}},g))}catch(b){if(L||b instanceof s.NoFallbackError||await y.onRequestError(a,b,{routerKind:"App Router",routePath:E,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})}),F)throw b;return await (0,o.I)(N,O,new Response(null,{status:500})),null}}},73024:a=>{"use strict";a.exports=require("node:fs")},73566:a=>{"use strict";a.exports=require("worker_threads")},74075:a=>{"use strict";a.exports=require("zlib")},78335:()=>{},79428:a=>{"use strict";a.exports=require("buffer")},79551:a=>{"use strict";a.exports=require("url")},81630:a=>{"use strict";a.exports=require("http")},83997:a=>{"use strict";a.exports=require("tty")},86439:a=>{"use strict";a.exports=require("next/dist/shared/lib/no-fallback-error.external")},87628:(a,b,c)=>{"use strict";let d,e;c.d(b,{I:()=>N});var f={};c.r(f),c.d(f,{attendees:()=>u,attendeesRelations:()=>y,audioChunks:()=>v,audioChunksRelations:()=>z,insertAttendeeSchema:()=>G,insertAudioChunkSchema:()=>H,insertMeetingSchema:()=>F,insertSpeakerSchema:()=>I,meetings:()=>t,meetingsRelations:()=>x,meetingsRelationsExtended:()=>E,sessions:()=>B,speakers:()=>w,speakersRelations:()=>A,users:()=>C,usersRelations:()=>D});var g=c(9608),h=c(22245),i=c(28803),j=c(57789),k=c(62352),l=c(29745),m=c(94728),n=c(84266),o=c(4396),p=c(98510),q=c(65828),r=c(58600),s=c(59791);let t=(0,i.cJ)("meetings",{id:(0,j.yf)("id").primaryKey(),title:(0,j.yf)("title",{length:255}).notNull(),language:(0,j.yf)("language",{length:10}).default("nl"),status:(0,j.yf)("status",{length:20}).notNull().default("recording"),createdAt:(0,k.vE)("created_at").defaultNow().notNull(),finishedAt:(0,k.vE)("finished_at"),transcription:(0,l.Qq)("transcription"),summary:(0,m.Fx)("summary"),speakerData:(0,m.Fx)("speaker_data"),retentionDays:(0,n.nd)("retention_days").default(30).notNull(),autoCleanupEnabled:(0,o.zM)("auto_cleanup_enabled").default(!0).notNull(),lastCleanupAt:(0,k.vE)("last_cleanup_at"),userId:(0,j.yf)("user_id").notNull(),organizerConsentGiven:(0,o.zM)("organizer_consent_given").notNull().default(!1),organizerConsentTimestamp:(0,k.vE)("organizer_consent_timestamp"),allAttendeesConsented:(0,o.zM)("all_attendees_consented").default(!1).notNull()}),u=(0,i.cJ)("attendees",{id:(0,p.vX)("id").primaryKey(),meetingId:(0,j.yf)("meeting_id").notNull().references(()=>t.id,{onDelete:"cascade"}),name:(0,j.yf)("name",{length:255}),email:(0,j.yf)("email",{length:255}).notNull(),role:(0,j.yf)("role",{length:100}),consentGiven:(0,o.zM)("consent_given").default(!1).notNull(),consentTimestamp:(0,k.vE)("consent_timestamp"),consentPolicyVersion:(0,j.yf)("consent_policy_version",{length:20}).default("v1.0"),consentWithdrawn:(0,o.zM)("consent_withdrawn").default(!1).notNull(),withdrawalTimestamp:(0,k.vE)("withdrawal_timestamp"),consentToken:(0,j.yf)("consent_token",{length:64})}),v=(0,i.cJ)("audio_chunks",{id:(0,p.vX)("id").primaryKey(),meetingId:(0,j.yf)("meeting_id").notNull().references(()=>t.id,{onDelete:"cascade"}),chunkIndex:(0,n.nd)("chunk_index").notNull(),filename:(0,j.yf)("filename",{length:255}).notNull(),objectPath:(0,j.yf)("object_path",{length:500}),sizeBytes:(0,n.nd)("size_bytes"),uploadedAt:(0,k.vE)("uploaded_at").defaultNow().notNull()}),w=(0,i.cJ)("speakers",{id:(0,p.vX)("id").primaryKey(),meetingId:(0,j.yf)("meeting_id").notNull().references(()=>t.id,{onDelete:"cascade"}),speakerId:(0,j.yf)("speaker_id",{length:50}).notNull(),speakerName:(0,j.yf)("speaker_name",{length:255}),duration:(0,n.nd)("duration").notNull(),percentage:(0,n.nd)("percentage").notNull(),createdAt:(0,k.vE)("created_at").defaultNow().notNull()}),x=(0,s.K1)(t,({many:a})=>({attendees:a(u),audioChunks:a(v),speakers:a(w)})),y=(0,s.K1)(u,({one:a})=>({meeting:a(t,{fields:[u.meetingId],references:[t.id]})})),z=(0,s.K1)(v,({one:a})=>({meeting:a(t,{fields:[v.meetingId],references:[t.id]})})),A=(0,s.K1)(w,({one:a})=>({meeting:a(t,{fields:[w.meetingId],references:[t.id]})})),B=(0,i.cJ)("sessions",{sid:(0,j.yf)("sid").primaryKey(),sess:(0,m.Fx)("sess").notNull(),expire:(0,k.vE)("expire").notNull()},a=>({expireIdx:(0,q.Pe)("IDX_session_expire").on(a.expire)})),C=(0,i.cJ)("users",{id:(0,j.yf)("id").primaryKey(),email:(0,j.yf)("email").unique(),firstName:(0,j.yf)("first_name"),lastName:(0,j.yf)("last_name"),profileImageUrl:(0,j.yf)("profile_image_url"),createdAt:(0,k.vE)("created_at").defaultNow().notNull(),updatedAt:(0,k.vE)("updated_at").defaultNow().notNull()}),D=(0,s.K1)(C,({many:a})=>({meetings:a(t)})),E=(0,s.K1)(t,({many:a,one:b})=>({attendees:a(u),audioChunks:a(v),speakers:a(w),user:b(C,{fields:[t.userId],references:[C.id]})})),F=(0,r.r)(t).omit({createdAt:!0,finishedAt:!0,transcription:!0,summary:!0,speakerData:!0,lastCleanupAt:!0,userId:!0,organizerConsentTimestamp:!0,allAttendeesConsented:!0}),G=(0,r.r)(u).omit({id:!0,meetingId:!0,consentGiven:!0,consentTimestamp:!0,consentPolicyVersion:!0,consentWithdrawn:!0,withdrawalTimestamp:!0,consentToken:!0}),H=(0,r.r)(v).omit({id:!0,uploadedAt:!0}),I=(0,r.r)(w).omit({id:!0,meetingId:!0,createdAt:!0});if("undefined"==typeof WebSocket)try{let a=c(45361);g.Vz.webSocketConstructor=a}catch(a){console.log("WebSocket not available in this environment, using HTTP pooling")}else g.Vz.webSocketConstructor=WebSocket;function J(){if(!d){if(!process.env.DATABASE_URL)throw Error("DATABASE_URL must be set. Did you forget to provision a database?");e=new g.bC({connectionString:process.env.DATABASE_URL}),d=(0,h.fd)(e,{schema:f})}return d}new Proxy({},{get:(a,b)=>(!e&&J(),e)[b]});let K=new Proxy({},{get:(a,b)=>J()[b]});var L=c(48689);class M{async createMeeting(a,b,c){return await K.transaction(async d=>{let[e]=await d.insert(t).values({...a,userId:c}).returning();return b.length>0&&await d.insert(u).values(b.map(a=>({...a,meetingId:e.id,consentToken:crypto.randomUUID()}))),e})}async getMeeting(a){let[b]=await K.select().from(t).where((0,L.eq)(t.id,a));return b||void 0}async getMeetingWithAttendees(a){let b=await this.getMeeting(a);if(!b)return;let c=await K.select().from(u).where((0,L.eq)(u.meetingId,a)),d=await K.select().from(w).where((0,L.eq)(w.meetingId,a)).orderBy(w.percentage);return{...b,attendees:c,speakers:d}}async updateMeeting(a,b){await K.update(t).set(b).where((0,L.eq)(t.id,a))}async finishMeeting(a){await this.updateMeeting(a,{status:"processing",finishedAt:new Date})}async addAudioChunk(a){let[b]=await K.insert(v).values(a).returning();return b}async getAudioChunks(a){return await K.select().from(v).where((0,L.eq)(v.meetingId,a)).orderBy(v.chunkIndex)}async incrementChunkCount(a){}async addSpeakers(a,b){return 0===b.length?[]:await K.insert(w).values(b.map(b=>({...b,meetingId:a}))).returning()}async getSpeakers(a){return await K.select().from(w).where((0,L.eq)(w.meetingId,a)).orderBy(w.percentage)}async updateSpeakerName(a,b,c){await K.update(w).set({speakerName:c}).where((0,L.Uo)((0,L.eq)(w.meetingId,a),(0,L.eq)(w.speakerId,b)))}async getMeetingsForCleanup(a){return await K.select().from(t).where((0,L.Uo)((0,L.eq)(t.autoCleanupEnabled,!0),(0,L.eq)(t.status,"completed"))).orderBy(t.createdAt)}async cleanupMeeting(a){await K.delete(t).where((0,L.eq)(t.id,a))}async updateLastCleanup(a){await K.update(t).set({lastCleanupAt:new Date}).where((0,L.eq)(t.id,a))}async getUser(a){let[b]=await K.select().from(C).where((0,L.eq)(C.id,a));return b||void 0}async upsertUser(a){let[b]=await K.insert(C).values(a).onConflictDoUpdate({target:C.id,set:{email:a.email,firstName:a.firstName,lastName:a.lastName,profileImageUrl:a.profileImageUrl,updatedAt:new Date}}).returning();return b}async getAttendeeByConsentToken(a){let[b]=await K.select().from(u).where((0,L.eq)(u.consentToken,a));return b||null}async updateAttendeeConsent(a,b){let d=new Date;return await K.transaction(async e=>{let[f]=await e.update(u).set({consentGiven:b,consentTimestamp:b?d:u.consentTimestamp,consentWithdrawn:!b,withdrawalTimestamp:b?null:d}).where((0,L.eq)(u.consentToken,a)).returning({meetingId:u.meetingId});if(!f)return null;if(!b){await this.handleConsentWithdrawal(f.meetingId,e);try{let{processingService:a}=await c.e(348).then(c.bind(c,39348));await a.forceCleanupMeetingChunks(f.meetingId)}catch(a){console.error("Failed to cleanup temp files after consent withdrawal:",a)}}return f})}async handleConsentWithdrawal(a,b){let d=b||K,e=await d.select().from(v).where((0,L.eq)(v.meetingId,a));try{let{AudioStorageService:a}=await c.e(198).then(c.bind(c,88198)),b=new a;for(let a of e)a.objectPath&&await b.deleteAudioChunk(a.objectPath)}catch(a){console.error("Failed to delete audio binaries from storage:",a)}await d.delete(v).where((0,L.eq)(v.meetingId,a)),await d.update(t).set({transcription:null,summary:null,speakerData:null,status:"cancelled"}).where((0,L.eq)(t.id,a)),await d.delete(w).where((0,L.eq)(w.meetingId,a)),console.log(`GDPR: Complete data deletion (DB + binaries) for meeting ${a} due to consent withdrawal`)}async updateMeetingConsentStatus(a){let b=await K.select().from(u).where((0,L.eq)(u.meetingId,a)),c=b.length>0&&b.every(a=>a.consentGiven&&!a.consentWithdrawn);await K.update(t).set({allAttendeesConsented:c}).where((0,L.eq)(t.id,a))}}let N=new M},91645:a=>{"use strict";a.exports=require("net")},94735:a=>{"use strict";a.exports=require("events")},96487:()=>{}};var b=require("../../../../webpack-runtime.js");b.C(a);var c=b.X(0,[586,692,258],()=>b(b.s=65316));module.exports=c})();