{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/lib/simple-auth.ts"],"sourcesContent":["// Stateless authentication - no database required\n// Simple JWT-like token system for VanDelft Groep login\n// Uses Web APIs only - compatible with Node.js â‰¥18 and Edge runtime\n\n// Session secret with production safety check\nconst SESSION_SECRET = process.env.SESSION_SECRET || \"super-secure-session-secret-key-for-vandelft-groep-ai-notulist-2025-render-deployment\";\n\n// Warn in production if default secret is used\nif (process.env.NODE_ENV === 'production' && !process.env.SESSION_SECRET) {\n  console.error('ðŸš¨ SECURITY WARNING: Using default SESSION_SECRET in production! Set SESSION_SECRET environment variable.');\n}\n\n// Dual-runtime base64url encoding - works in both Edge and Node.js\nfunction base64urlEncode(str: string): string {\n  let base64: string;\n  \n  if (typeof btoa !== 'undefined') {\n    // Browser/Edge environment - use btoa\n    const encoder = new TextEncoder();\n    const bytes = encoder.encode(str);\n    let binaryString = '';\n    for (let i = 0; i < bytes.length; i++) {\n      binaryString += String.fromCharCode(bytes[i]);\n    }\n    base64 = btoa(binaryString);\n  } else {\n    // Node.js environment - use Buffer\n    base64 = Buffer.from(str, 'utf8').toString('base64');\n  }\n  \n  // Make URL-safe\n  return base64\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '');\n}\n\n// Dual-runtime base64url decoding - works in both Edge and Node.js\nfunction base64urlDecode(str: string): string {\n  // Add padding back\n  let padded = str;\n  while (padded.length % 4) {\n    padded += '=';\n  }\n  \n  // Make base64-safe\n  const base64 = padded.replace(/-/g, '+').replace(/_/g, '/');\n  \n  if (typeof atob !== 'undefined') {\n    // Browser/Edge environment - use atob\n    const binaryString = atob(base64);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    const decoder = new TextDecoder();\n    return decoder.decode(bytes);\n  } else {\n    // Node.js environment - use Buffer\n    return Buffer.from(base64, 'base64').toString('utf8');\n  }\n}\n\n// Simple token creation with signature (JWT-like but simplified) - Edge compatible\nasync function createSignedToken(data: any): Promise<string> {\n  const payload = JSON.stringify(data);\n  const signature = await createSignature(payload);\n  const combined = JSON.stringify({ payload, signature });\n  return base64urlEncode(combined);\n}\n\nasync function verifySignedToken(token: string): Promise<any | null> {\n  try {\n    const combined = base64urlDecode(token);\n    const { payload, signature } = JSON.parse(combined);\n    \n    // Verify signature\n    const expectedSignature = await createSignature(payload);\n    if (signature !== expectedSignature) {\n      return null;\n    }\n    \n    const data = JSON.parse(payload);\n    \n    // Check expiration\n    if (data.expiresAt && new Date(data.expiresAt) < new Date()) {\n      return null;\n    }\n    \n    return data;\n  } catch {\n    return null;\n  }\n}\n\n// Web Crypto API signature creation - works in both Node.js â‰¥18 and Edge\nasync function createSignature(payload: string): Promise<string> {\n  if (!globalThis.crypto?.subtle) {\n    throw new Error('Web Crypto API not available. Requires Node.js â‰¥18 or Edge runtime.');\n  }\n  \n  const encoder = new TextEncoder();\n  const keyData = encoder.encode(SESSION_SECRET);\n  const payloadData = encoder.encode(payload);\n  \n  // Import secret as HMAC key\n  const cryptoKey = await globalThis.crypto.subtle.importKey(\n    'raw',\n    keyData,\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  );\n  \n  // Create signature\n  const signature = await globalThis.crypto.subtle.sign('HMAC', cryptoKey, payloadData);\n  \n  // Convert to hex string\n  const hashArray = Array.from(new Uint8Array(signature));\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\n// Stateless session management - no database required\nexport async function createSession(userId: string): Promise<string> {\n  const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 hours\n  const sessionData = { \n    userId, \n    expiresAt: expiresAt.toISOString(),\n    createdAt: new Date().toISOString()\n  };\n  return createSignedToken(sessionData);\n}\n\nexport async function getSession(token: string): Promise<{ userId: string } | null> {\n  if (!token) return null;\n  \n  const sessionData = await verifySignedToken(token);\n  if (!sessionData || !sessionData.userId) {\n    return null;\n  }\n  \n  return { userId: sessionData.userId };\n}\n\nexport async function deleteSession(token: string): Promise<void> {\n  // With stateless tokens, we can't \"delete\" them server-side\n  // The client should just remove the cookie\n  // Tokens will automatically expire based on their expiration time\n}\n\n// No cleanup needed for stateless sessions\nexport async function cleanupExpiredSessions(): Promise<void> {\n  // Nothing to clean up with stateless tokens\n}\n\n// Generate auth URL for Replit OAuth (simplified)\nexport function generateAuthUrl(redirectUri: string): string {\n  const state = globalThis.crypto?.randomUUID?.() || Math.random().toString(36).substr(2, 9);\n  const authUrl = new URL(\"https://replit.com/oauth/authorize\");\n  authUrl.searchParams.set(\"client_id\", process.env.REPL_ID || \"\");\n  authUrl.searchParams.set(\"redirect_uri\", redirectUri);\n  authUrl.searchParams.set(\"response_type\", \"code\");\n  authUrl.searchParams.set(\"scope\", \"user:email\");\n  authUrl.searchParams.set(\"state\", state);\n  \n  return authUrl.toString();\n}\n\n// Exchange code for user info (simplified - would need full OAuth implementation)\nexport async function exchangeCodeForUser(code: string): Promise<any> {\n  // This is a simplified version - in production you'd need full OAuth flow\n  // For now, return a mock user for testing\n  console.log(\"Auth code received:\", code);\n  return {\n    id: \"temp-user-\" + Math.random().toString(36).substr(2, 9),\n    email: \"test@example.com\",\n    name: \"Test User\"\n  };\n}\n\n// Multi-company user configurations\nconst COMPANY_USERS = {\n  'vandelftgroep-user': {\n    id: 'vandelftgroep-user',\n    email: 'info@vandelftgroep.nl',\n    firstName: 'Jordi',\n    lastName: 'van Delft',\n    companyName: 'Van Delft Groep',\n    companyId: 'vandelftgroep'\n  },\n  'klimax12-user': {\n    id: 'klimax12-user',\n    email: 'info@klimax12.nl',\n    firstName: 'Jody',\n    lastName: 'Klimax',\n    companyName: 'Klimax12',\n    companyId: 'klimax12'\n  }\n} as const;\n\n// Compatibility function for authMiddleware.ts - no database required\nexport async function getUserFromSession(token: string): Promise<{ user: any } | null> {\n  const session = await getSession(token);\n  if (!session) return null;\n  \n  // Return static user based on userId from session\n  const userConfig = COMPANY_USERS[session.userId as keyof typeof COMPANY_USERS];\n  if (userConfig) {\n    const user = {\n      ...userConfig,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    return { user };\n  }\n  \n  return null;\n}\n\n// Additional auth functions for compatibility\nexport function generateLogoutUrl(): string {\n  return \"/api/auth/logout\";\n}\n\nexport async function encryptSessionId(sessionData: any): Promise<string> {\n  return createSignedToken(sessionData);\n}\n\nexport async function decryptSessionId(token: string): Promise<any> {\n  return verifySignedToken(token);\n}\n\nexport async function handleCallback(code: string): Promise<{ sessionToken: string; user: any }> {\n  const userData = await exchangeCodeForUser(code);\n  \n  // Static user - no database required\n  const user = {\n    id: userData.id,\n    email: userData.email,\n    firstName: userData.name?.split(' ')[0] || '',\n    lastName: userData.name?.split(' ').slice(1).join(' ') || '',\n    createdAt: new Date(),\n    updatedAt: new Date()\n  };\n  \n  // Create stateless session\n  const sessionToken = await createSession(user.id);\n  \n  return { sessionToken, user };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/api/auth/check/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { getSession, getUserFromSession } from '../../../../lib/simple-auth';\nimport { cookies } from 'next/headers';\n\nexport async function GET(req: NextRequest) {\n  try {\n    const cookieStore = await cookies();\n    const sessionToken = cookieStore.get('session-token')?.value;\n\n    if (!sessionToken) {\n      return NextResponse.json({ authenticated: false }, { status: 401 });\n    }\n\n    const session = await getSession(sessionToken);\n    \n    if (!session) {\n      return NextResponse.json({ authenticated: false }, { status: 401 });\n    }\n\n    // Get full user details for welcome message\n    const userResult = await getUserFromSession(sessionToken);\n    if (!userResult) {\n      return NextResponse.json({ authenticated: false }, { status: 401 });\n    }\n\n    return NextResponse.json({ \n      authenticated: true, \n      userId: session.userId,\n      user: userResult.user\n    });\n  } catch (error) {\n    console.error('Auth check error:', error);\n    return NextResponse.json({ authenticated: false }, { status: 401 });\n  }\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM,cAAc,MAAM,IAAA,4IAAO;QACjC,MAAM,eAAe,YAAY,GAAG,CAAC,kBAAkB;QAEvD,IAAI,CAAC,cAAc;YACjB,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,eAAe;YAAM,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,MAAM,UAAU,MAAM,IAAA,qIAAU,EAAC;QAEjC,IAAI,CAAC,SAAS;YACZ,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,eAAe;YAAM,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,4CAA4C;QAC5C,MAAM,aAAa,MAAM,IAAA,6IAAkB,EAAC;QAC5C,IAAI,CAAC,YAAY;YACf,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,eAAe;YAAM,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB,eAAe;YACf,QAAQ,QAAQ,MAAM;YACtB,MAAM,WAAW,IAAI;QACvB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qBAAqB;QACnC,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,eAAe;QAAM,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF","debugId":null}}]
}